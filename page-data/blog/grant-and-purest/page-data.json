{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/grant-and-purest/","webpackCompilationHash":"fb180431034c6f3d838b","result":{"data":{"site":{"siteMetadata":{"title":"My personal site"}},"markdownRemark":{"id":"20f27ea0-57cb-5363-82ca-d121518b8979","html":"<h2>Using Purest</h2>\n<p>The <code class=\"language-text\">prepareSocialAuthPayload</code> function from the code snippet below\nwill be called by the callback middleware that receives the request from the\nsocial network. The request will contain either the <code class=\"language-text\">access_token</code> query parameter\n(if the social network is using oauth2 protocol) or the <code class=\"language-text\">access_token</code> and <code class=\"language-text\">access_secret</code>\nparameters (if the social network is using oauth1 protocol).</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> request <span class=\"token keyword\">from</span> <span class=\"token string\">'request'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Purest <span class=\"token keyword\">from</span> <span class=\"token string\">'purest'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> purestConfig <span class=\"token keyword\">from</span> <span class=\"token string\">'@purest/providers'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> purest <span class=\"token operator\">=</span> <span class=\"token function\">Purest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request<span class=\"token punctuation\">,</span> promise<span class=\"token punctuation\">:</span> Promise <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> facebook <span class=\"token operator\">=</span> <span class=\"token function\">purest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  provider<span class=\"token punctuation\">:</span> <span class=\"token string\">'facebook'</span><span class=\"token punctuation\">,</span>\n  config<span class=\"token punctuation\">:</span> purestConfig\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> twitter <span class=\"token operator\">=</span> <span class=\"token function\">purest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  provider<span class=\"token punctuation\">:</span> <span class=\"token string\">'twitter'</span><span class=\"token punctuation\">,</span>\n  config<span class=\"token punctuation\">:</span> purestConfig<span class=\"token punctuation\">,</span>\n  key<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Twitter key for your app,</span>\n  secret<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Twitter secret for your app,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> vk <span class=\"token operator\">=</span> <span class=\"token function\">purest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  provider<span class=\"token punctuation\">:</span> <span class=\"token string\">'vk'</span><span class=\"token punctuation\">,</span>\n  config<span class=\"token punctuation\">:</span> purestConfig\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> google <span class=\"token operator\">=</span> <span class=\"token function\">purest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  provider<span class=\"token punctuation\">:</span> <span class=\"token string\">'google'</span><span class=\"token punctuation\">,</span>\n  config<span class=\"token punctuation\">:</span> purestConfig\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// exported function that will be called elsewhere and receive Express request object</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prepareSocialAuthPayload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> provider</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>provider <span class=\"token operator\">===</span> <span class=\"token string\">'facebook'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prepareFacebookPayload</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>provider <span class=\"token operator\">===</span> <span class=\"token string\">'twitter'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prepareTwitterPayload</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>provider <span class=\"token operator\">===</span> <span class=\"token string\">'vkontakte'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prepareVkPayload</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>provider <span class=\"token operator\">===</span> <span class=\"token string\">'google'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prepareGooglePayload</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Failed to collect social network data:'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prepareFacebookPayload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> access_token <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> responseBody<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> facebook\n    <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'me'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">qs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> fields<span class=\"token punctuation\">:</span> <span class=\"token string\">'name,email,picture.width(50).height(50)'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>access_token<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    picture<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>picture<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n    providerTokenData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      access_token\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    provider<span class=\"token punctuation\">:</span> <span class=\"token string\">'Facebook'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prepareTwitterPayload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> access_token<span class=\"token punctuation\">,</span> access_secret <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> responseBody<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> twitter\n    <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'account/verify_credentials'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">qs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> include_email<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>access_token<span class=\"token punctuation\">,</span> access_secret<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>name <span class=\"token operator\">||</span> responseBody<span class=\"token punctuation\">.</span>screen_name<span class=\"token punctuation\">,</span>\n    picture<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>profile_image_url_https <span class=\"token operator\">||</span> responseBody<span class=\"token punctuation\">.</span>profile_image_url<span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n    providerTokenData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Twitter uses oauth1 protocol</span>\n      oauth_token<span class=\"token punctuation\">:</span> access_token<span class=\"token punctuation\">,</span>\n      oauth_secret<span class=\"token punctuation\">:</span> access_secret\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    provider<span class=\"token punctuation\">:</span> <span class=\"token string\">'Twitter'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prepareVkPayload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> access_token<span class=\"token punctuation\">,</span> raw <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n  logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'raw from Vkontakte'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>raw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> responseBody<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> vk\n    <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users.get'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">qs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> v<span class=\"token punctuation\">:</span> <span class=\"token string\">'5.85'</span><span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">:</span> <span class=\"token string\">'photo_50'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"v\" for api version is a required parameter</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>access_token<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* VK response will have the following shape:\n    { \"response\": [\n      { \"id\",\n        \"first_name\",\n        \"last_name\",\n        \"photo_50\"\"\n      }\n    ]}\n  */</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> first_name<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> photo_50 <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> responseBody<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first_name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>last_name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    picture<span class=\"token punctuation\">:</span> photo_50<span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> raw<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span> <span class=\"token comment\">// VK returns user's email in the same response as access_token</span>\n    providerTokenData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      access_token\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    provider<span class=\"token punctuation\">:</span> <span class=\"token string\">'VK'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prepareGooglePayload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> access_token <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> responseBody<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> google\n    <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'oauth2/v1/userinfo'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// https://www.googleapis.com/oauth2/v1/userinfo</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>access_token<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n    picture<span class=\"token punctuation\">:</span> responseBody<span class=\"token punctuation\">.</span>picture<span class=\"token punctuation\">,</span>\n    providerTokenData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      access_token\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    provider<span class=\"token punctuation\">:</span> <span class=\"token string\">'Google'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Authenticating with social networks and getting user data from them","date":"08 January, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/grant-and-purest/"}}}